<?php
namespace Api\Controller;
use Think\Controller;
class VipController extends UsersController {
    private $company_id=0;
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //只有是注册者或者是分公司的管理员才给与通过
        $user=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $company=M('company')->where(array('id'=>$user))->getField('is_passed');
        if ($company==1){
            $this->company_id=$user;
        }else if($company===null){
            header('Code:2000');
            $ret['code']=2000;
            $ret['message']='无权操作';
            backJson($ret);
        }else{
            header('Code:2100');
            $ret['code']=2000;
            $ret['message']='认证还未通过审核';
            backJson($ret);
        }
    }
    /**************************************发布交易信息**************************/
    function addSellerNew(){
        if(!I('del_address')||!I('pro_address')){
            $ret['code']=0;
            $ret['message']='地址必须填写';
            backJson($ret);
        }
        $data=I('post.');
        //地址截取处理
        $pro_address=explode('-',$data['pro_address']);
        $data['pro_address_p']=$pro_address[0]?$pro_address[0]:'未知';
        $data['pro_address_s']=$pro_address[1]?$pro_address[1]:'未知';
        $data['pro_address_q']=$pro_address[2]?$pro_address[2]:'未知';
        $del_address=explode('-',$data['del_address']);
        $data['del_address_p']=$del_address[0]?$del_address[0]:'未知';
        $data['del_address_s']=$del_address[1]?$del_address[1]:'未知';
        $data['del_address_q']=$del_address[2]?$del_address[2]:'未知';
        //作者
        $data['writer_id']=$this->company_id;
        //调用模型添加操作
        backJson(D('Seller_news')->addData($data));
    }
    /*********************************贸易信息详情********************************/
    function detailSellerNew(){
        $seller_new=M('seller_news')->where(array('id'=>I('id')))->find(I('id'));
        //浏览量加1
        $data['click']=$seller_new['click']+1;
        M('seller_news')->where(array('id'=>I('id')))->save($data);
        if($seller_new){
            $company=M('company')->where(array('id'=>$seller_new['writer_id']))->find();
            $user=M('users')->where(array('company_id'=>$company['id']))->find();
            $seller_new['writer_name']=$company['name'];
            $seller_new['phone']=$user['phone'];
            $seller_new['coal_type']=coal_type($seller_new['coal_type']);
            $seller_new['coal_type_id']=$seller_new['coal_type'];
            $seller_new['photo']=$user['photo']!=40?getTrueImgSrc($user['photo']):getTrueImgSrc('Public/seller_new_logo.png');
            $ret['code']=1;
            $ret['message']='获取成功';
            $ret['detail']=$seller_new;
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='没有数据';
            backJson($ret);
        }

    }
    /*****************************确认拉货***************************************/
    function sellerBill(){
        if(!I("bill_id")||!I('begin_w')){
            $ret['code']=0;
            $ret['message']='参数有误';
            backJson($ret);
        }
        $user=M('users')->where(array('id'=>session('user_id')))->find();
        D('Bill','Logic')->sellerBill(I('bill_id'),I('begin_w'),$user['company_id'],1);
    }
    /*****************************确认收货***************************************/
    function buyerBill(){
        if(!I("bill_id")||!I('end_w')){
            $ret['code']=0;
            $ret['message']='参数有误';
            backJson($ret);
        }
        $user=M('users')->where(array('id'=>session('user_id')))->find();
        D('Bill','Logic')->buyerBill(I('bill_id'),I('end_w'),$user['company_id'],1);
    }
    /*******************************读取提煤单************************************/
    function scanEwm(){
        if(!I('code')){
            $ret['code']='3';
            $ret['message']='二维码信息有误';
            die(json_encode($ret));
        }
        //截取密钥
        $key=substr(I('code'),0,4);
        $data=substr(I('code'),4);
        $bill=object_array(json_decode(decrypt($data,$key)));
       dump($bill);
    }
    /*******************************贸易商报表页面************************************/
    function reportForm(){
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        //接收变量
        $supply_type=I('supply_type')?I('supply_type'):'1';
        $trade_type=I('trade_type')?I('trade_type'):'1';
        $logistics_type=I('logistics_type')?I('logistics_type'):'1';
        $bill_type=I('bill_type')?I('bill_type'):'1';
        $capacity=M('company')->where(array('id'=>$company_id))->getField('capacity');//今日产能
        $is_produce=M('company')->where(array('id'=>$company_id))->getField('is_produce');//是否生产
        $supply=[];//货源大厅
        $trade=[];//贸易大厅
        $logistics_operate=[];//物流公司运营概况
        $bill_operate=[];//物流公司提煤单概况
        $information_operate=[];//信息部运营概况
        $arr_logistics=[];//承运送货完成情况
        $no_logistics=[];//非承运送货完成情况

        $mouth_first=date('Y-m-1 00:00:00');
        $mouth_end=date('Y-m-d 23:59:59');
        $day_first=date('Y-m-d 00:00:00');
        $day_end=date('Y-m-d 23:59:59');

        //货源大厅需要按时间搜索

        switch ($supply_type){
            case 1://本月
                $time_where="create_time < '".$mouth_end."' and create_time >'".$mouth_first."'";break;
            case 2://本日
                $time_where="create_time < '".$day_end."' and create_time >'".$day_first."'";break;
            case 3://全部
                $time_where=array();break;
        }
        $logistics_goods=M('logistics_goods')->where(array('writer_id'=>$company_id))->field('id,click')->select();
        //浏览次数
        $supply['browse_times']=0;
        $goods_id_arr=array();
        foreach ($logistics_goods as $key=>$value){
            $goods_id_arr[$key]=$value['id'];
            $supply['browse_times']=$supply['browse_times']+$value['click'];
        }
        $supply['browse_times']=$supply['browse_times'].'次';
        //按照支付保证金的情况获取完成次数,正在进行次数,完成比例
        if(count($goods_id_arr)){
            $where['uid']=array('in',$goods_id_arr);
            $supply['total_times']=M('re_goods')->where($where)->where(array('state'=>'4'))->count().'次';//已完成
            $supply['zong_times']=M('re_goods')->where($where)->count().'次';//总次数
            $supply['doing_times']=M('re_goods')->where($where)->where(array('state'=>array('in','1,2,3')))->count().'次';
            $supply['rate']=round_num($supply['total_times'],$supply['zong_times']);
            unset($supply['zong_times']);
        }else{
            $supply['total_times']='0次';//已完成
            $supply['doing_times']='0次';
            $supply['rate']='0%';
        }

        //贸易大厅
        switch ($trade_type){
            case 1://本月
                $trade_data=M('seller_news')->where(array('writer_id'=>$company_id))->where("creat_time > '".$mouth_first."' and creat_time < '".$mouth_end."'")->select();break;
            case 2://本日
                $trade_data=M('seller_news')->where(array('writer_id'=>$company_id))->where("creat_time > '".$day_first."' and creat_time < '".$day_end."'")->select();break;
            case 3://全部
                $trade_data=M('seller_news')->where(array('writer_id'=>$company_id))->select();break;
        }
        $browse_times=0;
        $dialled_times=0;
        $rate_time=0;
        foreach ($trade_data as $value){
            $browse_times=$browse_times+$value['click'];
            $dialled_times=$dialled_times+$value['dialled'];
            if($value['click']>0){
                $rate_time++;
            }
        }
        $trade=array('total_times'=>count($trade_data).'条','browse_times'=>$browse_times.'次','dialled_times'=>$dialled_times.'次','rate'=>round_num($rate_time,count($trade_data)));

        //物流公司运营概况
        //获取子公司
        $subcompany=M('company')->where("id = $company_id or pid = $company_id")->field('id')->select();
        $company_arr=array();
        foreach ($subcompany as $key=>$value){
            $company_arr[$key]=$value['id'];
        }
        $total_trucks=M('truck')->where(array('is_comperation'=>1))->where(array('user_id'=>array('in',$company_arr)))->count();

        $doing_trucks=M('truck')->where(array('is_comperation'=>1))->where(array('user_id'=>array('in',$company_arr)))->where(array('state'=>array('in','2,3')))->count();

        switch ($logistics_type){
            case 1://本月
                //共计车次
                $total_times=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")->count();

                $total_w=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")->sum('end_w');
                //保留两位小数

                $total_w=$total_w?$total_w:0;
                $total_w=show_weight($total_w);
                $farm_bill=M('bill')->where(array('anchored_id'=>$company_id,'state'=>6))->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")->where(array('company'=>array('neq'=>$company_id)))->count();

                $logistics_operate=array('doing_trucks'=>$doing_trucks.'辆','total_trucks'=>$total_trucks.'辆','total_times'=>$total_times.'次','total_w'=>$total_w,'farm_bill'=>$farm_bill.'单');break;
            case 2://本日
                //共计车次
                $total_times=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")->count();

                $total_w=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")->sum('end_w');

                $total_w=$total_w?$total_w:0;
                $total_w=show_weight($total_w);
                $farm_bill=M('bill')->where(array('anchored_id'=>$company_id,'state'=>6))->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")->where(array('company'=>array('neq'=>$company_id)))->count();

                $logistics_operate=array('doing_trucks'=>$doing_trucks.'辆','total_trucks'=>$total_trucks.'辆','total_times'=>$total_times.'次','total_w'=>$total_w,'farm_bill'=>$farm_bill.'单');break;
            case 3://全部
                //共计车次
                $total_times=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->count();
                $total_w=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->sum('end_w');
                $total_w=$total_w?$total_w:0;
                $total_w=show_weight($total_w);
                $farm_bill=M('bill')->where(array('anchored_id'=>$company_id,'state'=>6))->where(array('company'=>array('neq'=>$company_id)))->count();
                $logistics_operate=array('doing_trucks'=>$doing_trucks.'辆','total_trucks'=>$total_trucks.'辆','total_times'=>$total_times.'次','total_w'=>$total_w,'farm_bill'=>$farm_bill.'单');break;
        }
        //物流公司提煤单概况
        switch ($bill_type){

            case 1://本月
                $waitting_bill=M('bill')->where(array('state'=>1))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")->count();

                $doing_bill=M('bill')->where(array('company'=>array('in',$company_arr)))->where(array('state'=>array('in','2,3')))->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")->count();
                $re_bill=M('driver_rbill r')
                    ->join('coal_bill b on b.id=r.bill_id')
                    ->where(array('r.state'=>1))
                    ->where(array('b.company'=>array('in',$company_arr)))
                    ->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")
                    ->count();
                $complete_bill=M('bill')->where(array('company'=>array('in',$company_arr)))->where(array('state'=>6))->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")->count();
                $manual_bill=M('balance_bill bl')
                    ->join('coal_bill b on b.id=bl.bill_id')
                    ->where(array('bl.type'=>2,'bl.state'=>1))
                    ->where(array('b.company'=>array('in',$company_arr)))
                    ->where("dis_time > '".$mouth_first."' and dis_time < '".$mouth_end."'")
                    ->count();
                $bill_operate=array('waitting_bill'=>$waitting_bill.'单','doing_bill'=>$doing_bill.'单','re_bill'=>$re_bill.'单','complete_bill'=>$complete_bill.'单','manual_bill'=>$manual_bill.'单未处理');break;
            case 2://本日
                $waitting_bill=M('bill')->where(array('state'=>1))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")->count();
                $doing_bill=M('bill')->where(array('company'=>array('in',$company_arr)))->where(array('state'=>array('in','2,3')))->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")->count();
                $re_bill=M('driver_rbill r')
                    ->join('coal_bill b on b.id=r.bill_id')
                    ->where(array('r.state'=>1))
                    ->where(array('b.company'=>array('in',$company_arr)))
                    ->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")
                    ->count();
                $complete_bill=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")->count();
                $manual_bill=M('balance_bill bl')
                    ->join('coal_bill b on b.id=bl.bill_id')
                    ->where(array('bl.type'=>2,'bl.state'=>1))
                    ->where(array('b.company'=>array('in',$company_arr)))
                    ->where("dis_time > '".$day_first."' and dis_time < '".$day_end."'")
                    ->count();
                $bill_operate=array('waitting_bill'=>$waitting_bill.'单','doing_bill'=>$doing_bill.'单','re_bill'=>$re_bill.'单','complete_bill'=>$complete_bill.'单','manual_bill'=>$manual_bill.'单未结算');break;
            case 3://全部
                $waitting_bill=M('bill')->where(array('state'=>1))->where(array('company'=>array('in',$company_arr)))->count();
                $doing_bill=M('bill')->where(array('state'=>1))->where(array('company'=>array('in',$company_arr)))->where(array('state'=>array('in','2,3')))->count();
                $re_bill=M('driver_rbill r')
                    ->join('coal_bill b on b.id=r.bill_id')
                    ->where(array('r.state'=>1))
                    ->where(array('b.company'=>array('in',$company_arr)))
                    ->count();
                $complete_bill=M('bill')->where(array('state'=>6))->where(array('company'=>array('in',$company_arr)))->count();
                $manual_bill=M('balance_bill bl')
                    ->join('coal_bill b on b.id=bl.bill_id')
                    ->where(array('bl.type'=>2,'bl.state'=>1))
                    ->where(array('b.company'=>array('in',$company_arr)))
                    ->count();
                $bill_operate=array('waitting_bill'=>$waitting_bill.'单','doing_bill'=>$doing_bill.'单','re_bill'=>$re_bill.'单','complete_bill'=>$complete_bill.'单','manual_bill'=>$manual_bill.'单未结算');break;
        }

        //信息部运营概况
        //贸易公司承运送货完成情况
        $logistics=M('logistics')
            ->where(array('assign_id'=>$company_id,'res_quantity'=>array('gt',0),'state'=>1))
            ->where("(create_time > '".$day_first."' and "." create_time <'".$day_end."')")
            ->select();
//        $logistics=M('logistics')
//            ->where('(assign_id ='.$company_id.' and res_quantity >0 and state=1) or '."(create_time > '".$day_first."' and "." create_time <'".$day_end."')")
//            ->select();
        $total_w=M('logistics')
            ->where(array('assign_id'=>$company_id,'res_quantity'=>array('gt',0),'state'=>1))
            ->where("(create_time > '".$day_first."' and "." create_time <'".$day_end."')")
            ->sum('quantity');
        $total_w=$total_w?$total_w:0;
        $total_w=round($total_w,2);
        $complete_w=0;
        $company1=array();
        foreach ($logistics as $key=>$value){
            $company1[$key]['name']=M('company')->where(array('id'=>$value['assigned_id']))->getField('name');
            $company1[$key]['total_w']=M('bill')
                ->where(array('company'=>$value['assigned_id'],'logistics_id'=>$value['id'],'state'=>6))
                ->sum('end_w');
            $company1[$key]['total_w']=round($company1[$key]['total_w'],2);
            $company1[$key]['rate']= round_num($company1[$key]['total_w'],$value['quantity']);
            $complete_w=$complete_w+$company1[$key]['total_w'];
        }
        $arr_logistics=array('company'=>$company1,'total_w'=>$total_w.'吨','complete_w'=>$complete_w.'吨');

        //贸易公司非承运送货完成情况
//        $orders=M('orders')->where(array('n_log_id'=>$company_id))->field('order_id')->select();
//        $orders_arr=array();
//        if(count($orders)){
//            foreach ($orders as $key=>$value){
//                $orders_arr[$key]=$value['order_id'];
//            }
//        }
//        if(!count($orders_arr)){
//            $logistics=array();
//            $total_w=0;
//        }else{
//            $logistics=M('logistics')
//                ->where(array('order_id'=>array('in',$orders_arr)))
//                ->where(array('res_quantity'=>array('gt',0),'state'=>1))
//                ->select();
//            $total_w=M('logistics')
//                ->where(array('order_id'=>array('in',$orders_arr)))
//                ->where(array('res_quantity'=>array('gt',0),'state'=>1))
//                ->sum('quantity');
//            $total_w=round($total_w,2);
//        }
//        $complete_w=0;
//        $company1=array();
//        foreach ($logistics as $key=>$value){
//            $company1[$key]['name']=M('company')->where(array('id'=>$value['assigned_id']))->getField('name');
//            $company1[$key]['total_w']=M('bill')
//                ->where(array('company'=>$value['assigned_id'],'logistics_id'=>$value['id'],'state'=>6))
//                ->sum('end_w');
//            $company1[$key]['total_w']=round($company1[$key]['total_w'],2);
//            $company1[$key]['rate']= round_num($company1[$key]['total_w'],$value['quantity']);
//            $complete_w=$complete_w+$company1[$key]['total_w'];
//        }
        //只是以bill为主表进行统计今天派出去的
        $total_w=0;
        $complete_w=0;
        $bills=M('bill b')
            ->join('coal_logistics l on l.id= b.logistics_id')
            ->where(array('l.assign_id '=>array('neq',$company_id)))
            ->where('b.seller = '.$company_id.' or b.buyer = '.$company_id." and dis_time> '".$day_first."' and dis_time <'".$day_end."'")
            ->field('b.id,b.state,b.arrange_w,b.company,b.end_w,sum(end_w) as end_w,sum(arrange_w) as arrange_w')
            ->group('b.company')
            ->select();
        foreach ($bills as $key=>$value){
            $complete_w=$value['end_w']+$complete_w;
            $total_w=$value['arrange_w']+$total_w;
            $company1[$key]['name']=getCompanyName($value['company']);
            $company1[$key]['total_w']=$value['arrange_w'];
            $company1[$key]['rate']= round_num($value['end_w'],$value['arrange_w']);
        }
        $total_w=show_weight($total_w);
        $complete_w=show_weight($complete_w);

        $no_logistics=array('company'=>$company1,'total_w'=>$total_w,'complete_w'=>$complete_w);


        $ret['capacity']=$capacity;
        $ret['is_produce']=$is_produce;

        $ret['supply_type']=$supply_type;
        $ret['trade_type']=$trade_type;
        $ret['logistics_type']=$logistics_type;
        $ret['bill_type']=$bill_type;

        $ret['supply']=$supply;
        $ret['trade']=$trade;
        $ret['logistics_operate']=$logistics_operate;
        $ret['bill_operate']=$bill_operate;
        $ret['arr_logistics']=$arr_logistics;
        $ret['no_logistics']=$no_logistics;
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /********************************是否生产******************************************/
    function isProduce(){
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $company=M('company')->where(array('id'=>$company_id))->find();
        $data['is_produce']=$company['is_produce']==1?0:1;
        $res=M('company')->where(array('id'=>$company_id))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='修改成功';
            $ret['is_produce']=$data['is_produce'];
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='修改失败';
            $ret['is_produce']=$company['is_produce'];
            backJson($ret);
        }
    }
    /*******************************贸易商列表**************************************/
    function sellerNewsList(){
        //每页显示条数
        if(!I('size')){
            $pagesize=10;
        }else{
            $pagesize=I('size');
        }
        //当前页码
        if(!I('pagenum')){
            $page=1;
        }else{
            $page=I('pagenum');
        }
        $limit=$pagesize*($page-1).",".$pagesize;
        $news['rows']=M('seller_news')->where(array('writer_id'=>$this->company_id))->limit($limit)->field('id,title,dwrz,sdjlf,del_price,pro_address_s')->select();
        if(count($news['rows'])==0){
            $ret['code']=0;
            $ret['message']='没有数据';
            die(json_encode($ret));
        }
        $news['pagenum']=$page;
        backJson($news);
    }
    /*******************************删除贸易信息**************************************/
    function delSellerNew(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='传递参数有误';
            backJson($ret);
        }
        $seller_new=M('seller_news')->where(array('id'=>I('id')))->find();
        if($this->company_id!=$seller_new['writer_id']){
            $ret['code']=0;
            $ret['message']='信息拥有者有误';
            backJson($ret);
        }
        $res=M('seller_news')->delete(I('id'));
        if($res){
            $ret['code']=1;
            $ret['message']='删除成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='删除失败';
            backJson($ret);
        }
    }
    /*******************************修改贸易信息**************************************/
    function editSellerNew(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='传递参数有误';
            backJson($ret);
        }
        $seller_new=M('seller_news')->where(array('id'=>I('id')))->find();
        if($this->company_id!=$seller_new['writer_id']){
            $ret['code']=0;
            $ret['message']='信息拥有者有误';
            backJson($ret);
        }
        $data=I('post.');
        //地址截取处理
        $pro_address=explode('-',$data['pro_address']);
        $data['pro_address_p']=$pro_address[0];
        $data['pro_address_s']=$pro_address[1];
        $data['pro_address_q']=$pro_address[2];
        $del_address=explode('-',$data['del_address']);
        $data['del_address_p']=$del_address[0];
        $data['del_address_s']=$del_address[1];
        $data['del_address_q']=$del_address[2];
        //作者
        $data['writer_id']=$this->company_id;
        //调用模型添加操作
        $res=M('seller_news')->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='修改成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='修改失败';
            backJson($ret);
        }
    }
    /******************************在贸易商详情页面拨打电话*************************/
    function ialledNew(){
        //不判断请求失败
        $data['id']=I('id');
        $data['dialled']=M('seller_news')->where(array('id'=>I('id')))->getField('dialled')+1;
        M('seller_news')->save($data);
        $ret['code']=1;
        $ret['message']='成功';
        backJson($ret);
    }
    /******************************提煤单历史统计*************************/
    function billHistory(){
        //查看展示那个版本
        $default_menu=M('users')->where(array('id'=>session('user_id')))->getField('default_set_menu');

        //默认本月初到今天
        $begin_time=I('begin_time')?I('begin_time'):date('Y-m-01 00:00:00');
        $end_time=I('end_time')?I('end_time'):date('Y-m-d 23:59:59');
        $is_assign=I('is_assign')?I('is_assign'):1;
        $vip_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $company_id=I('company_id')?I('company_id'):null;


        //公司ID
        if($default_menu==1){
            ////贸易商筛选
            switch ($is_assign){
                case 1:
                    $rows1=D('Bill','Logic')->history(null,null,$begin_time,$end_time,null,null,null,$company_id,null,$vip_id);
                    $rows2=D('Bill','Logic')->history(null,null,$begin_time,$end_time,null,null,null,$company_id,null,$vip_id,false);
                    $rows=array_merge($rows1,$rows2);break;
                case 2:
                    $rows=D('Bill','Logic')->history(null,null,$begin_time,$end_time,null,null,null,$company_id,null,$vip_id,false);
                    break;
                case 3:
                    $rows=D('Bill','Logic')->history(null,null,$begin_time,$end_time,null,null,null,$company_id,null,$vip_id);
            }
        }else{
            //物流公司筛选
            //查看是否是总公司
            $company_id=I('company_id')?I('company_id'):M('users')->where(array('id'=>session('user_id')))->getField('company_id');
            $c_pid=M('company')->where(array('id'=>$company_id))->getField('pid');
            if($c_pid!=0){
                //子公司
                $rows=D('Bill','Logic')->history(I('trucker_id'),null,$begin_time,$end_time,null,null,null,$company_id,null,null,false);
            }else{
                $subcompany=M('company')->where("id = $company_id or pid = $company_id")->field('id')->select();
                $rows=array();
                foreach ($subcompany as $key=>$value){
                    $data=D('Bill','Logic')->history(I('trucker_id'),null,$begin_time,$end_time,null,null,null,$value['id'],null,null,false);
                    $rows=array_merge($rows,$data);
                }

            }

        }

        $ret['total_w']=0;
        foreach ($rows as $key=>$value){
            $ret['total_w']=$ret['total_w']+$value['end_w'];
            $rows[$key]['dis_time']=date('Y年m月d日',strtotime($value['end_second_time']));
            unset($rows[$key]['order_id']);
            unset($rows[$key]['end_second_time']);
        }
        $ret['rows']=$rows;
        $ret['begin_time']=date('Y年m月d日',strtotime($begin_time));
        $ret['end_time']=date('Y年m月d日',strtotime($end_time));
        $ret['total_times']=count($rows);
        $ret['code']=1;
        $ret['default_menu']=M('users')->where(array('id'=>session('user_id')))->getField('default_set_menu');
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************筛选的物流公司列表*************************/
    function getCompanys(){
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $companies = M('bill b')
            ->field('c.id,c.name')
            ->join('left join coal_company c on c.id = b.company')
            ->where(array('_complex' => array('seller' => $company_id, 'buyer' => $company_id,'_logic'=>'or')))
            ->group('company')->select();
        $ret['rows']=$companies;
        if(count($ret['rows'])){
            $ret['code']=1;
            $ret['message']='获取成功';
        }else{
            $ret['code']=0;
            $ret['message']='没有数据';
        }
        backJson($ret);
    }
    /******************************筛选的车主列表*************************/
    function getTruckers(){
        $own=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $ret['rows']=M('company_trucker ct')
            ->join('coal_users u on ct.trucker_id=u.id')
            ->where(array('status'=>1,'company'=>$own))
            ->field('u.real_name as name,u.id as id')
            ->select();
        if(count($ret['rows'])){
            $ret['code']=1;
            $ret['message']='获取成功';
        }else{
            $ret['code']=0;
            $ret['message']='没有数据';
        }
        backJson($ret);
    }
    /******************************筛选的子公司列表*************************/
    function getSubcompanys(){
        $compnay_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $ret['rows']=M('company c')
            ->where(array('pid'=>$compnay_id))
            ->field('name,id')
            ->select();
        if(count($ret['rows'])){
            $ret['code']=1;
            $ret['message']='获取成功';
        }else{
            $ret['code']=0;
            $ret['message']='没有数据';
        }
        backJson($ret);
    }
    /******************************发布货运信息***************************************/
    function addLogisticsGoods(){
        $from_address=I('from_address');
        $from_arr=explode('-',$from_address);

        $data['from_province']=$from_arr[0]?$from_arr[0]:'未知';
        $data['from_city']=$from_arr[1]?$from_arr[1]:'未知';
        $data['from_area']=$from_arr[2]?$from_arr[2]:'未知';
        $from_address=I('to_address');
        $to_arr=explode('-',$from_address);
        $data['to_province']=$to_arr[0]?$to_arr[0]:'未知';
        $data['to_city']=$to_arr[1]?$to_arr[1]:'未知';
        $data['to_area']=$to_arr[2]?$to_arr[2]:'未知';
        $data['coal_type']=I('coal_type');
        $data['price']=I('price');
        $data['quantity']=I('quantity');
        $data['tip_type']=I('tip_type');
        $data['tip']=I('tip');
        $data['writer_id']=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $data['comment']=I('comment');
        $res=D('Logistics_goods')->addData($data);
        if($res['code']==1){
            $ret['code']=1;
            $ret['message']='发布成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']=$res['info'];
            backJson($ret);
        }
    }
    /******************************自身发布货运信息列表***************************************/
    function ownerLogisticsGoods()
    {
        $pagesize=10;
        $compnay_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $page=I('page')?I('page'):1;
        $limit=$pagesize*($page-1).",".$pagesize;
        $logisticsgoods=M('logistics_goods l')
            ->join("coal_company c on l.writer_id=c.id")
            ->where(array('l.is_passed'=>1,'writer_id'=>$compnay_id))
            ->limit($limit)
            ->field('l.from_province,l.from_city,l.from_area,l.to_province,l.to_city,l.to_area,l.coal_type,l.quantity,l.comment,c.id as compnay_id,l.id as id,l.tip,l.tip_type,l.price')
            ->order('l.create_time desc, l.id desc')
            ->select();
        $total_logisticsgoods=M('logistics_goods l')
            ->join("coal_company c on l.writer_id=c.id")
            ->where(array('l.is_passed'=>1))
            ->field('l.from_city,l.to_city,l.coal_type,l.quantity,l.comment,c.name,c.id,l.create_time')
            ->select();
        foreach ($logisticsgoods as $key=>$value){
            $logisticsgoods[$key]['coal_type']=coal_type($value['coal_type']);
            $logisticsgoods[$key]['coal_type_id']=$value['coal_type'];
            $logisticsgoods[$key]['re_times']=M('re_goods')->where(array('uid'=>$value['id']))->count();
            unset($logisticsgoods[$key]['compnay_id']);
        }
        if(count($logisticsgoods)){
            $ret['rows']=$logisticsgoods;
            $ret['code']=1;
            $ret['message']='获取成功';
            $ret['pagenum']=$page;
            $ret['rows']=$logisticsgoods;
            $ret['records']=count($total_logisticsgoods);
            $ret['total_page']=ceil($ret['records']/$pagesize);
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='没有内容';
            backJson($ret);
        }
    }
    /******************************删除货源信息***************************************/
    function delownerLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //检测这个货源信息是否是自己发布的
        $compnay_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $goods=M('logistics_goods')->where(array('id'=>I('id')))->find();
        if(!$goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        if($compnay_id!=$goods['writer_id']){
            $ret['code']=0;
            $ret['message']='该条信息不是您发布的,不能删除';
            backJson($ret);
        }
        //检测该信息是否有人已经接到了
        $re_goods=M('re_goods')->where(array('uid'=>I('id')))->count();
        if($re_goods>0){
            $ret['code']=0;
            $ret['message']='该条信息已经有人接单,不能退单';
            backJson($ret);
        }
        //正式删除
        $res=M('logistics_goods')->where(array('id'=>I('id')))->delete();
        if($res){
            $ret['code']=1;
            $ret['message']='删除成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='删除失败,稍后再试';
            backJson($ret);
        }
    }
    /******************************货源信息详情**************************************************/
    function detailLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //检测这个货源信息是否是自己发布的
        $compnay_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $goods=M('logistics_goods')->where(array('id'=>I('id')))->find();
        if(!$goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        if($compnay_id!=$goods['writer_id']){
            $ret['code']=0;
            $ret['message']='该条信息不是您发布的,不能查看';
            backJson($ret);
        }
        $id=I('id');
        $logisticsgoods=M('logistics_goods l')
            ->join("coal_company c on l.writer_id=c.id")
            ->where(array('l.id'=>$id))
            ->field('l.from_city,l.to_city,l.coal_type,l.quantity,l.id as id,l.tip_type')
            ->find();
        $logisticsgoods['coal_type']=coal_type($logisticsgoods['coal_type']);
        //查看信息反馈数据
        $re_rows=M('re_goods')->where(array('uid'=>$logisticsgoods['id']))->field('writer_id,create_time,state,id')->select();
        foreach ($re_rows as $key=>$value){
            $re_rows[$key]['user_name']=M('users')->where(array('id'=>$value['writer_id']))->getField('real_name as name');
            $re_rows[$key]['re_time']=date('Y年m月d日',strtotime($value['create_time']));
            unset($re_rows[$key]['writer_id']);
            unset($re_rows[$key]['create_time']);
        }
        $logisticsgoods['re_rows']=$re_rows;
        if($logisticsgoods){
            $ret['detail']=$logisticsgoods;
            $ret['code']=1;
            $ret['message']='获取成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='没有内容';
            backJson($ret);
        }
    }
    /******************************货源订单确认发货**************************************************/
    function confirmLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //查看该信息是不是自己发布的
        //查看该信息的状态是不是待确认的状态
        $logistics_goods=M('re_goods r')
                        ->join('coal_logistics_goods l on l.id=r.uid')
                        ->field('l.writer_id as owner_id,r.state as state')
                        ->where(array('r.id'=>I('id')))
                        ->find();
        // dump_text(M()->_sql());
        if(!$logistics_goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        if($logistics_goods['owner_id']!=$company_id){
            $ret['code']=0;
            $ret['message']='该条信息不是您发布的,请确认';
            backJson($ret);
        }
        if($logistics_goods['state']!=0){
            $ret['code']=0;
            $ret['message']='该信息状态异常';
            backJson($ret);
        }
        $data['state']=1;
        $res=M('re_goods')->where(array('id'=>I('id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='确认成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='确认失败,稍后再试';
            backJson($ret);
        }
    }
    /******************************货源订单确认完成**************************************************/
    function finishLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //查看该信息是不是自己发布的
        //查看该信息的状态是不是待确认的状态
        $logistics_goods=M('re_goods r')
            ->join('coal_logistics_goods l on l.id=r.uid')
            ->field('l.writer_id as owner_id,r.state as state')
            ->where(array('r.id'=>I('id')))
            ->find();
        if(!$logistics_goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        if($logistics_goods['owner_id']!=$company_id){
            $ret['code']=0;
            $ret['message']='该条信息不是您发布的,请确认';
            backJson($ret);
        }
        if($logistics_goods['state']!=3){
            $ret['code']=0;
            $ret['message']='该信息状态异常';
            backJson($ret);
        }
        $data['state']=4;
        $data['end_time']=date('Y-m-d H:i:s');
        $res=M('re_goods')->where(array('id'=>I('id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='确认成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='确认失败,稍后再试';
            backJson($ret);
        }
    }
    /******************************修改货运信息***************************************/
    function editLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //检测这个货源信息是否是自己发布的
        $compnay_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $goods=M('logistics_goods')->where(array('id'=>I('id')))->find();
        if(!$goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        if($compnay_id!=$goods['writer_id']){
            $ret['code']=0;
            $ret['message']='该条信息不是您发布的,不能查看';
            backJson($ret);
        }
        $id=I('id');

        $from_address=I('from_address');
        $from_arr=explode('-',$from_address);

        $data['from_province']=$from_arr[0]?$from_arr[0]:'未知';
        $data['from_city']=$from_arr[1]?$from_arr[1]:'未知';
        $data['from_area']=$from_arr[2]?$from_arr[2]:'未知';
        $from_address=I('to_address');
        $to_arr=explode('-',$from_address);
        $data['to_province']=$to_arr[0]?$to_arr[0]:'未知';
        $data['to_city']=$to_arr[1]?$to_arr[1]:'未知';
        $data['to_area']=$to_arr[2]?$to_arr[2]:'未知';
        $data['coal_type']=I('coal_type');
        $data['price']=I('price');
        $data['quantity']=I('quantity');
        $data['tip_type']=I('tip_type');
        $data['tip']=I('tip');
        $data['writer_id']=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $data['comment']=I('comment');
        $res=M('Logistics_goods')->where(array('id'=>I('id')))->save($data);
        if($res['code']!==false){
            $ret['code']=1;
            $ret['message']='修改成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='修改失败,稍后再试';
            backJson($ret);
        }
    }
    /******************************发布公告***************************************/
    function addNotice(){
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        if(!I('notice')||!I('title')){
            $ret['code']=0;
            $ret['message']='参数提交不完整';
            backJson($ret);
        }
        $data['uid']=$company_id;
        $data['company_id']=$company_id;
        $data['notice']=I('notice');
        $data['title']=I('title');
        $data['add_time']=date('Y-m-d H:i:s');
        $res=M('company_notice')->add($data);
        if($res){
            // 推送消息(公告)
            vendor('Emchat.Easemobclass');
            $group_id=M('company')->where(array('id'=>$company_id))->getField('group_id');
            $h=new \Easemob();
            $h->sendText(session('user_id'),'chatgroups', array($group_id), I('notice'));
            $ret['code']=1;
            $ret['message']='发布成功';
            backJson($ret);
        }
    }
    /******************************公告列表***************************************/
    function listNotice(){
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        $notices=M('company_notice')->where(array('company_id'=>$company_id))->order('add_time desc,id desc')->field('notice,add_time,id,title')->select();
        $ret['rows']=$notices;
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************编辑公告***************************************/
    function editNotice(){
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        if(!I('notice')||!I('title')||!I('id')){
            $ret['code']=0;
            $ret['message']='参数提交不完整';
            backJson($ret);
        }
        $data['uid']=$company_id;
        $data['company_id']=$company_id;
        $data['notice']=I('notice');
        $data['title']=I('title');
        $data['add_time']=date('Y-m-d H:i:s');
        $res=M('company_notice')->where(array('id'=>I('id')))->save($data);
        if($res){
            // 推送消息(公告)
            vendor('Emchat.Easemobclass');
            $group_id=M('company')->where(array('id'=>$company_id))->getField('group_id');
            $h=new \Easemob();
            $h->sendText(session('user_id'),'chatgroups', array($group_id), I('notice'));
            $ret['code']=1;
            $ret['message']='发布成功';
            backJson($ret);
        }
    }
    /******************************删除公告***************************************/
    function delectNotice(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='参数提交不完整';
            backJson($ret);
        }
        $res=M('company_notice')->where(array('id'=>I('id')))->delete();
        if($res){
            $ret['code']=1;
            $ret['message']='删除成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='删除失败，请稍后再试';
            backJson($ret);
        }
    }
    /******************************证件管理列表***************************************/
    function listLic(){
        $company=M('company c')
            ->field('c.lic_pic,c.is_passed,c.ys_lic,c.ys_is_passed,c.sf_lic,c.sf_is_passed')
            ->join('coal_users u on u.company_id=c.id')
            ->where(array('u.id'=>session('user_id')))
            ->find();
        $ret['lic_number']['src']=getTrueImgSrc($company['lic_pic']);
        $ret['lic_number']['is_passed']=$company['is_passed'];
        $ret['ys_lic']['src']=getTrueImgSrc($company['ys_lic']);
        $ret['ys_lic']['is_passed']=$company['ys_is_passed'];
        $ret['sf_lic']['src']=getTrueImgSrc($company['sf_lic']);
        $ret['sf_lic']['is_passed']=$company['sf_is_passed'];
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************上传证件***************************************/
    function upLic(){
        if(!I('type')||!I('src')){
            $ret['code']=0;
            $ret['message']='信息提交有误';
            backJson($ret);
        }
        $company_id=M('users')->where(array('id'=>session('user_id')))->getField('company_id');
        switch (I('type')){
            case 1://运输许可证
                $data['ys_lic']=I('src');break;
            case 2://法人身份证
                $data['sf_lic']=I('src');break;
        }
        $res=M('company')->where(array('id'=>$company_id))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='处理成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='处理失败';
            backJson($ret);
        }
    }
}