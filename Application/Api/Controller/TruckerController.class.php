<?php
//司机控制器
//权限设定在司机的驾驶证必须认证并且通过审核
namespace Api\Controller;
use Think\Controller;
class TruckerController extends UsersController {
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $truck=M('truck')->where(array('owner_id'=>session('user_id')))->find();
        if (!$truck){
            //没有进行认证过
            $ret['code']=0;
            $ret['message']='你还没有进行车主认证';
            backJson($ret);
        }
    }
    /**************************************车主绑定司机验证是否绑定自己**************************/
    function checkDriver(){
        //检查自己是否认证了司机以及自己是否已经绑定过了，以便提醒是否是绑定自己
        $is_driver=M('driver')->where(array('uid'=>session('user_id'),'is_passed'=>1))->find();
        if(!$is_driver){
            $ret['code']=0;
            $ret['message']='车主自身没有认证司机';
            backJson($ret);
        }else{
            if(!$is_driver['truck_id']){
                $ret['code']=1;
                $ret['message']='车主自身认证了司机，可以进行自我绑定';
                backJson($ret);
            }elseif($is_driver['truck_id']){
                $ret['code']=0;
                $ret['message']='车主自身没有认证司机';
                backJson($ret);
            }
        }
    }
    /****************************************车主进行自我绑定********************************/
    function bindSelf(){
        backJson(D('Truck','Logic')->bindDriver(I('truck_id'),session('user_id'),session('user_id'),I('work_time')));
    }
    /****************************************车主绑定司机********************************/
    function bindDriver(){
        //司机提交的有可能是手机号或者是ID
        $driver=M('users')->where('phone='.I('driver').' or id='.I('driver'))->find();
        backJson(D('Truck','Logic')->bindDriver(I('truck_id'),$driver['id'],session('user_id'),I('work_time')));
    }
    /****************************************车辆列表********************************/
    function listTrucks(){
        $trucks=M('truck')->where(array('owner_id'=>session('user_id')))->order('is_passed asc,id')->field('id,lic_number,maximum,create_time,is_passed')->select();
        //查找绑定的司机
        foreach ($trucks as $key=>$value){
            $detail=D('Truck','Logic')->getDetail($value['id']);
            $trucks[$key]['drivers']=$detail['drivers'];
            $trucks[$key]['total_w']=$detail['total_w'];
            $trucks[$key]['work_long']=$detail['work_long'];
        }
        $ret['code']=1;
        $ret['message']='获取成功';
        $ret['rows']=$trucks;
        backJson($ret);
    }
    /****************************************车辆详情********************************/
    function truckDetail(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='参数有误';
            backJson($ret);
        }
        //先通过模型获取基本信息
        $detail=D('Truck','Logic')->getDetail(I('id'));
        $truck=M('truck')->where(array('id'=>I('id')))->field('id,lic_number,maximum,create_time')->find();
        $truck['photo']=$detail['photo'];

        //司机信息
        foreach ($detail['drivers'] as $key=>$value){
            $driver=M('driver')->join('coal_users ON coal_users.id=coal_driver.uid')->where(array('uid'=>$value['id']))->find();
            $truck['drivers'][$key]=$value;
            $truck['drivers'][$key]['lic_number']=$driver['lic_number'];
            $truck['drivers'][$key]['phone']=$driver['phone'];

            switch ($driver['work_time']){
                case 1:$truck['drivers'][$key]['work_time']='全班';break;
                case 2:$truck['drivers'][$key]['work_time']='白班';break;
                case 3:$truck['drivers'][$key]['work_time']='晚班';break;
            }

        }
        $truck['photo']=$detail['photo'];
        $ret['code']=1;
        $ret['message']='获取成功';
        $ret['detail']=$truck;
        backJson($ret);
    }
    /****************************************解雇司机********************************/
    function fireDriver(){
        D('Driver','Logic')->fire(session('user_id'),I('driver_id'));
    }
    /**************************************司机列表*********************************/
    function listDrivers(){
        //获取申请合作的司机
        $drivers1=M('driver_trucker')->join('coal_users ON coal_users.id=coal_driver_trucker.driver_id')->where(array('trucker_id'=>session('user_id'),'status'=>1))->field('driver_id as id,real_name as name')->select();
        foreach ($drivers1 as $key =>$value){
            $drivers1[$key]['lic_number']=M('driver')->where(array('uid'=>$value['id']))->getField('lic_number');
        }

        //获取车辆绑定的司机
        $trucks=M('truck')->where(array('owner_id'=>session('user_id')))->field('id,lic_number,maximum,create_time')->select();
        //查找绑定的司机
        $drivers=[];
        foreach ($trucks as $key=>$value){
            $detail=D('Truck','Logic')->getDetail($value['id']);
            if(count($detail['drivers'])){
                $drivers=array_merge($drivers,$detail['drivers']);
            }
        }
        //获取司机详细信息
        $arr=[];
        foreach ($drivers as $key=>$value){
            $arr[$key]=$value;
            $arr[$key]['lic_number']=M('driver')->where(array('uid'=>$value['id']))->getField('lic_number');
            $arr[$key]['truck']=M('driver')->where(array('uid'=>$value['id']))->getField('truck_id');
            $work_time=M('driver')->where(array('uid'=>$value['id']))->getField('work_time');
            $array=array(1=>'全天',2=>'白班',3=>'夜班');
            $arr[$key]['work_time']=$array[$work_time];
            $create_time=M('driver')->where(array('uid'=>$value['id']))->getField('create_time');
            $arr[$key]['work_long']=getday($create_time);
            if($arr[$key]['truck']){
                $arr[$key]['truck']=M('truck')->where(array('id'=>$arr[$key]['truck']))->getField('lic_number');
            }
        }
        $ret['driver1']=$drivers1;
        $ret['driver']=$arr;
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /**************************************司机详情*********************************/
    function driverDetail(){
        if(!I('driver_id')){
            $ret['code']=0;
            $ret['message']='参数有误';
            backJson($ret);
        }
        $ret['detail']=D('Driver','Logic')->getDetail(I('driver_id'));
        $ret['detail']['truck_id']=M('driver')->where(array('uid'=>I('driver_id')))->getField('truck_id');
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    function changeWork(){
        if(!I('driver_id')||!I('work_time')){
            $ret['code']=0;
            $ret['message']='参数有误';
            backJson($ret);
        }
        $result = D('Driver','Logic')->changeWorkTime(I('driver_id'), I('work_time'));
        backJson($result);
    }
    /****************************************用来绑定司机的车辆列表********************************/
    function listTrucks1(){
        $trucks=M('truck')->where(array('owner_id'=>session('user_id'),'is_passed'=>1))->order('is_passed asc,id')->field('id,lic_number')->select();
        $ret['code']=1;
        $ret['message']='获取成功';
        $ret['rows']=$trucks;
        backJson($ret);
    }
    /************************************拒绝司机的绑定申请*************************************/
    function refuseDriver(){
        if(!I('driver_id')){
            $ret['code']=0;
            $ret['message']='操作失败';
            backJson($ret);
        }
        $driver_trucker=M('driver_trucker')->where(array('trucker_id'=>session('user_id'),'driver_id'=>I('driver_id'),'status'=>1))->find();
        if(!$driver_trucker){
            $ret['code']=0;
            $ret['message']='操作失败';
            backJson($ret);
        }
        $data['status']=3;
        $res=M('driver_trucker')->where(array('trucker_id'=>session('user_id'),'driver_id'=>I('driver_id')))->save($data);
        if($res!==false){
            D('Push','Logic')->noticeDriverRefuse(I('driver_id'),session('user_id'));
            $ret['code']=1;
            $ret['message']='操作成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='操作失败';
            backJson($ret);
        }
    }
    /************************************给司机更换车辆*************************************/
    function changeTruck(){
        if(!I('driver_id')||!I('old_id')||!I('new_id')){
            $ret['code']=0;
            $ret['message']='参数传递不完整';
            backJson($ret);
        }
        //验证司机绑定的老车辆
        $driver=M('driver')->where(array('uid'=>I('driver_id')))->find();
        if($driver['truck_id']!=I('old_id')){
            $ret['code']=0;
            $ret['message']='司机信息有误';
            backJson($ret);
        }
        //车辆在途则不能更换






        $truck_id=M('driver')->where(array('uid'=>I('driver_id')))->getField('truck_id');
        $truck=M('truck')->where(array('id'=>$truck_id))->find();
        $bill = M('bill')->where(array('driver_id' => I('driver_id'), 'state' => array('lt', 6)))->find();
        if ($bill) {
            $res['code']=0;
            $res['message']='该司机有正在进行的单';
            backJson($res);
        }
        $bill1 = M('bill')->where(array('truck_id' => $truck['id'], 'state' => array('lt', 6)))->find(); // 车辆有没有单
        $drivers_count = M('driver')->where(array('truck_id' => $truck['id'], 'is_passed' =>1))->count();
        if((in_array($truck['state'],[2,3]) || $bill1) && $drivers_count == 1){ // 不管车辆处于何种状态，都能解雇司机吗？空车可以，坏车也可以吗？可以。
            $res['code']=0;
            $res['message']='车辆正在使用中且司机只有一个，不能更换车辆';
            backJson($res);
        }





//        $truck=M('truck')->where(array('id'=>$driver['truck_id']))->find();
//        if($truck['state']!=1){
//            $ret['code']=0;
//            $ret['message']='在途/暂停车辆不能更换司机';
//            backJson($ret);
//        }
        //验证新绑定的车辆
        $new_truck=M('truck')->where(array('id'=>I('new_id'),'is_passed'=>1))->find();
        if(!$new_truck or $new_truck['owner_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='车辆信息有误';
            backJson($ret);
        }
        $data['truck_id']=I('new_id');
        $res=M('driver')->where(array('uid'=>I('driver_id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='更换成功';
            backJson($ret);
        }
    }
    /************************************合作物流公司列表*************************************/
    function companyList(){
        //申请合作的物流公司
        //合作中的物流公司
        //解除合作的物流公司
        $companys=M('company_trucker')
            ->join('coal_company ON coal_company_trucker.company = coal_company.id')
            ->where(array('trucker_id'=>session('user_id')))
            ->where(array('coal_company_trucker.status' => array('in','1,2,4')))
            ->field('coal_company.id as company_id,name,coal_company_trucker.status,codate')
            ->order('coal_company_trucker.status desc,coal_company_trucker.id')
            ->select();
        foreach ($companys as $key=>$value){
            switch ($value['status']){
                case 1:
                    $companys[$key]['time']=getyear($value['codate']);
                    //获取绑定的车辆
                    $trucks=M('truck')->where(array('owner_id'=>session('user_id'),'owner_type'=>1,'anchored_id'=>$value['company_id'],'is_anchored'=>1))->select();
                    $companys[$key]['truck_number']=count($trucks);
                    break;
                case 2:
                case 4:
                    $companys[$key]['time']=$value['codate'];
                    break;
            }
            unset($companys[$key]['codate']);
        }
        if(count($companys)){
            $ret['rows']=$companys;
            $ret['code']=1;
            $ret['message']='获取成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='没有数据';
            backJson($ret);
        }

    }
    /************************************确认跟物流公司合作*************************************/
    function acceptCompany(){
        if(!I('company_id')){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        if(!M('company_trucker')->where(array('company'=>I('company_id'),'status'=>2,'trucker_id'=>session('user_id')))->count()){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        $data['status']=1;
        $data['codate']=date("Y-m-d H:i:s");
        $res=M('company_trucker')->where(array('company'=>I('company_id'),'status'=>2,'trucker_id'=>session('user_id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            //将车主拉进去公司群
                vendor('Emchat.Easemobclass');
                $group_id=M('company')->where(array('id'=>I('company_id')))->getField('group_id');
                $h=new \Easemob();
                $h->addGroupMember($group_id,session('user_id'));
            $ret['message']='操作成功';
            $user=M('users')->where(array('id'=>session('user_id')))->getField('real_name');
            $message='恭喜您'.$user.'[车主]同意了您的合作申请';
            D('Push','Logic')->noticeManager('车主接受合作',$message,I('company_id'));
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='操作失败';
            backJson($ret);
        }
    }
    /************************************拒绝跟物流公司合作*************************************/
    function refuseCompany(){
        if(!I('company_id')){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        if(!M('company_trucker')->where(array('company'=>I('company_id'),'status'=>2,'trucker_id'=>session('user_id')))->count()){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        $data['status']=3;
        $res=M('company_trucker')->where(array('company'=>I('company_id'),'status'=>2,'trucker_id'=>session('user_id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='操作成功';
            $user=M('users')->where(array('id'=>session('user_id')))->getField('real_name');
            $message='很遗憾'.$user.'[车主]拒绝了您的合作申请';
            D('Push','Logic')->noticeManager('车主拒绝合作',$message,I('company_id'));
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='操作失败';
            backJson($ret);
        }
    }
    /************************************删除跟物流公司合作*************************************/
    function delCompany(){
        if(!I('company_id')){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        if(!M('company_trucker')->where(array('company'=>I('company_id'),'status'=>4,'trucker_id'=>session('user_id')))->count()){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        $data['status']=5;
        $res=M('company_trucker')->where(array('company'=>I('company_id'),'status'=>4,'trucker_id'=>session('user_id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='操作成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='操作失败';
            backJson($ret);
        }
    }
    /************************************合作物流公司详情*************************************/
    function companyDetail(){
        if(!I('company_id')){
            $ret['code']=0;
            $ret['message']='传递参数有误';
            backJson($ret);
        }
        if(!M('company_trucker')->where(array('company'=>I('company_id'),'status'=>1,'trucker_id'=>session('user_id')))->count()){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        //公司基本信息
        $company=M('company')->where(array('id'=>I('company_id')))->field('name,lic_pic')->find();
        $company['photo']=getTrueImgSrc($company['lic_pic']);
        $company['time']=getyear(M('company_trucker')->where(array('company'=>I('company_id'),'status'=>1,'trucker_id'=>session('user_id')))->getField('codate'));
        unset($company['lic_pic']);
        //合作车辆
        $truck=M('truck')->where(array('owner_id'=>session('user_id'),'owner_type'=>1,'anchored_id'=>I('company_id'),'is_anchored'=>1))->field('lic_number,maximum,id,create_time')->select();
        foreach ($truck as $key=>$value){
            //获取司机
            $drivers=M('driver')->join('coal_users on coal_users.id=coal_driver.uid')->where(array('truck_id'=>$value['id']))->field('real_name as name')->select();
            $truck[$key]['drivers']=[];
            foreach ($drivers as $k=>$v){
                $truck[$key]['drivers'][$k]=$v['name'];
            }
            //服役时间
            $truck[$key]['time']=getyear($value['create_time']);
            unset($truck[$key]['create_time']);
            //拉运吨数
            $bill=M('bill')->where(array('truck_id'=>$value['id'],'state'=>6,'company_id'=>I('company_id')))->select();
            $truck[$key]['weight']=0;
            foreach ($bill as $kk=>$vv){
                $truck[$key]['weight']=$truck[$key]['weight']+$vv['end_w'];
            }
        }
        //总车数
        $ret['total_truck']=count($truck);
        //总吨数
        $histor_bills=D('Bill',"Logic")->history(session('user_id'),null,null,null,null,null,null,I('company_id'),null,null);
        $ret['total_w']=0;
        foreach ($histor_bills as $key=>$value){
            $ret['total_w']=$ret['total_w']+$value['end_w'];
        }
        //司机总数
        $ret['total_drivers']=0;
        foreach ($truck as $key=>$value){
            $ret['total_drivers']=$ret['total_drivers']+count($value['drivers']);
        }
        $ret['company']=$company;
        $ret['truck']=$truck;
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************提煤单历史统计*************************/
    function billHistory(){
        //默认本月初到今天
        $begin_time=I('begin_time')?I('begin_time'):date('Y-m-01 00:00:00');
        $end_time=I('end_time')?I('end_time'):date('Y-m-d 23:59:59');
        $driver_id=I('driver_id')?I('driver_id'):null;
        $truck_id=I('truck_id')?I('truck_id'):null;
        $lic_number=M('truck')->where(array('id'=>$truck_id))->getField('lic_number');
        $company_id=I('company_id')?I('company_id'):null;
        $rows=D('Bill','Logic')->history(session('user_id'),$driver_id,$begin_time,$end_time,$lic_number,null,null,$company_id,null,null,false);
        $ret['total_w']=0;
        foreach ($rows as $key=>$value){
            $ret['total_w']=$ret['total_w']+$value['end_w'];
            $rows[$key]['dis_time']=date('Y年m月d日',strtotime($value['end_second_time']));
            unset($rows[$key]['order_id']);
            unset($rows[$key]['end_second_time']);
        }
        $ret['rows']=$rows;
        $ret['begin_time']=date('Y年m月d日',strtotime($begin_time));
        $ret['end_time']=date('Y年m月d日',strtotime($end_time));
        $ret['total_times']=count($rows);
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************筛选历史统计的司机列表*************************/
    function getDrivers(){
        $ret['rows']=M('driver d')
            ->join('coal_users u on u.id=d.uid')
            ->join('coal_truck t on t.id=d.truck_id')
            ->where(array('t.owner_id'=>session('user_id'),'t.owner_type'=>1,'t.is_passed'=>1))
            ->field('u.real_name as name,u.id as id')
            ->select();
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************筛选历史统计的车辆列表*************************/
    function getTrucks(){
        $ret['rows']=M('truck t')
            ->join('coal_users u on u.id=t.owner_id')
            ->where(array('t.owner_id'=>session('user_id'),'owner_type'=>1,'t.is_passed'=>1))
            ->field('t.lic_number as lic_number,t.id as id')
            ->select();
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************筛选历史统计的物流公司列表*************************/
    function getCompanys(){
        $ret['rows']=M('company_trucker ct')
            ->join('coal_company c on c.id=ct.company')
            ->where(array('ct.trucker_id'=>session('user_id'),'ct.status'=>1))
            ->field('c.name as name,c.id as id')
            ->select();
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************支付货单保金***************************************/
    function reGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='传递参数有误1';
            backJson($ret);
        }
        $logisticsgoods=M('logistics_goods l')
            ->join("coal_company c on l.writer_id=c.id")
            ->where(array('l.id'=>I('id')))
            ->field('l.from_city,l.to_city,l.coal_type,l.quantity,l.comment,c.name,l.writer_id as company_id,l.create_time,l.id as id,l.tip')
            ->find();
        //如果是自己发布的则要排除不能操作
        if($logisticsgoods['writer_id']==session('user_id')){
            $ret['code']=0;
            $ret['message']='此货源信息是自己发布的,不能操作';
            backJson($ret);
        }
        //如果是已经支付过并且还在拉货中就不能再次支付
        $re_goods=M('re_goods')->where(array('uid'=>I('id'),'writer_id'=>session('user_id')))->where(array('state'=>array('in','0,1,2,3,5,6')))->find();
        if($re_goods){
            $ret['code']=0;
            $ret['message']='您已经提出过申请,不能重复提交';
            backJson($ret);
        }
        if(!$logisticsgoods){
            $ret['code']=0;
            $ret['message']='传递参数有误';
            backJson($ret);
        }
        $data['uid']=I('id');
        $data['writer_id']=session('user_id');
        $data['tip']=$logisticsgoods['tip'];
        $res=D('Re_goods')->addData($data);
        if($res['code']){
            $ret['code']=1;
            $ret['message']='操作成功,请在我的页面的货运订单里面查看';
            backJson($ret);
        }else{
            $ret['code']=1;
            $ret['message']=$res['info'];
            backJson($ret);
        }
    }
    /******************************我承运的货运信息列表***************************************/
    function ownerLogisticsGoods()
    {

        $pagesize=10;
        $page=I('page')?I('page'):1;
        $limit=$pagesize*($page-1).",".$pagesize;

        $logisticsgoods=M('logistics_goods l')
            ->join("coal_re_goods r on l.id=r.uid")
            ->where(array('r.writer_id'=>session('user_id')))
            ->field('l.from_city,l.to_city,l.coal_type,r.create_time as create_time,r.state,r.id as id')
            ->order('create_time desc,id')
            ->limit($limit)
            ->select();
        foreach ($logisticsgoods as $key=>$value){
            $logisticsgoods[$key]['create_time']=date('Y年m月d日 h:m');
            $logisticsgoods[$key]['coal_type']=coal_type($value['coal_type']);
        }
        $total_logisticsgoods=M('logistics_goods l')
            ->join("coal_re_goods r on l.id=r.uid")
            ->where(array('r.writer_id'=>session('user_id')))
            ->field('l.from_city,l.to_city,l.coal_type,r.create_time as create_time')
            ->select();


        if(count($logisticsgoods)){
            $ret['rows']=$logisticsgoods;
            $ret['code']=1;
            $ret['message']='获取成功';
            $ret['pagenum']=$page;
            $ret['rows']=$logisticsgoods;
            $ret['records']=count($total_logisticsgoods);
            $ret['total_page']=ceil($ret['records']/$pagesize);
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='没有内容';
            backJson($ret);
        }
    }
    /******************************货源订单确认装货**************************************************/
    function startLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //查看该信息是不是自己发布的
        //查看该信息的状态是不是待确认的状态
        $re_goods=M('re_goods r')
            ->join('coal_logistics_goods l on l.id=r.uid')
            ->field('r.writer_id as owner_id,r.state as state')
            ->where(array('r.id'=>I('id')))
            ->find();
        if(!$re_goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        if($re_goods['owner_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='订单不是您接单';
            backJson($ret);
        }
        if($re_goods['state']!=1){
            $ret['code']=0;
            $ret['message']='该信息状态异常';
            backJson($ret);
        }
        $data['state']=2;
        $res=M('re_goods')->where(array('id'=>I('id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='确认成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='确认失败,稍后再试';
            backJson($ret);
        }
    }
    /******************************货源订单确认完成**************************************************/
    function finishLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //查看该信息是不是自己发布的
        //查看该信息的状态是不是待确认的状态
        $re_goods=M('re_goods r')
            ->join('coal_logistics_goods l on l.id=r.uid')
            ->field('r.writer_id as owner_id,r.state as state')
            ->where(array('r.id'=>I('id')))
            ->find();
        if(!$re_goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        if($re_goods['owner_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='订单不是您接单';
            backJson($ret);
        }
        if($re_goods['state']!=2){
            $ret['code']=0;
            $ret['message']='该信息状态异常';
            backJson($ret);
        }
        $data['state']=3;
        $res=M('re_goods')->where(array('id'=>I('id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='确认成功';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='确认失败,稍后再试';
            backJson($ret);
        }
    }
    /******************************货源大厅打电话***************************************/
    function telLogisticsGoods(){
        $ret['code']=1;
        $ret['message']='确认成功';
        backJson($ret);
    }
    /******************************货源订单申请放空**************************************************/
    function appealLogisticsGoods(){
        if(!I('id')){
            $ret['code']=0;
            $ret['message']='信息提交不完整';
            backJson($ret);
        }
        //查看该信息是不是自己发布的
        //查看该信息的状态是不是待确认的状态
        $re_goods=M('re_goods r')
            ->join('coal_logistics_goods l on l.id=r.uid')
            ->field('r.writer_id as owner_id,r.state as state')
            ->where(array('r.id'=>I('id')))
            ->find();
        if(!$re_goods){
            $ret['code']=0;
            $ret['message']='信息不存在';
            backJson($ret);
        }
        if($re_goods['owner_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='订单不是您接单';
            backJson($ret);
        }
        if($re_goods['state']!=1 and $re_goods['state']!=2){
            $ret['code']=0;
            $ret['message']='该信息状态异常';
            backJson($ret);
        }
        $data['state']=5;
        $res=M('re_goods')->where(array('id'=>I('id')))->save($data);
        if($res!==false){
            $ret['code']=1;
            $ret['message']='申请提交成功,请联系煤问题客服跟进处理进度';
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='确认失败,稍后再试';
            backJson($ret);
        }
    }
}