<?php
//司机控制器
//权限设定在司机的驾驶证必须认证并且通过审核
namespace Api\Controller;
use Think\Controller;
class DriverController extends UsersController {
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $driver=M('driver')->where(array('uid'=>session('user_id')))->find();
        if (!$driver){
            //没有进行认证过
            $ret['code']=0;
            $ret['message']='你还没有进行司机认证';
            backJson($ret);
        }elseif(!$driver['is_passed']){
            //认证过,但是目前还没有通过审核
            $ret['code']=0;
            $ret['message']='您的认证还没有通过审核';
            backJson($ret);
        }
    }
    /**************************************司机绑定车主**************************/
    function bindTruck(){
        //处理车主的提交是手机号或者是id
        $trucker=M('users')->where('phone='.I('trucker').' or id='.I('trucker'))->find();
        backJson(D('DriverTrucker','Logic')->band(session('user_id'),$trucker['id']));
    }
    /***********************************更换是否接单*****************************/
    function changeWork(){
        $driver_data=M('driver')->where(array('uid'=>session('user_id')))->find();
        //如果绑定的车辆有单并且只有绑定一个司机的时候不能切换
        $bill=M('bill')->where(array('state'=>1,'truck_id'=>$driver_data['truck_id']))->find();
        $other_driver=M('driver')->where(array('truck_id'=>$driver_data['truck_id']))->where('uid!='.session('user_id'))->find();
        if(!$other_driver && $bill && $driver_data['is_work'] == 1){
            $ret['code']=0;
            $ret['message']='您还有尚未处理的提煤单不能更改接单状态';
            backJson($ret);
        }
        //如果司机手里面有没有完成的提煤单,则不能暂停
        $do_bill=M('bill')->where(array('state'=>array('in','1,2,3,4,5'),'driver_id'=>session('user_id')))->find();
        if($do_bill && $driver_data['is_work'] == 1){
            $ret['code']=0;
            $ret['message']='您还有尚未处理的提煤单不能更改接单状态';
            backJson($ret);
        }

        $driver_work=M('driver')->where(array('uid'=>session('user_id')))->getField('is_work');
        $change=$driver_work?0:1;
        $data['is_work']=$change;
        $res=M('driver')->where(array('uid'=>session('user_id')))->save($data);
        if($res!==false){
            // 2017年7月1日18:45:07 zgw 打开接单开关时，又有待接单的提煤单时，给短信提醒。
            if ($driver_data['is_work'] == 0 && $bill) {
                //推送
                $phone=M('users')->where(array('id'=>$driver_data['uid']))->getField('phone');
                $name=M('users')->where(array('id'=>$driver_data['uid']))->getField('real_name');
                $message='您有一条提煤单需要处理,请尽快接单.';
                $title='[煤问题]新订单通知';
                $code=1100;//状态码
                D("Push",'Logic')->arrBill($phone,$message,$title,$code);
                //短信
                vendor('TopSdk.TopSdk');
                $mes=new \Message();
                $mes->informDriverBill($name,$phone);
            }
            $ret['code']=1;
            $ret['message']='更改成功';
            $ret['is_work']=$change;
            backJson($ret);
        }else{
            $ret['code']=0;
            $ret['message']='修改失败';
            backJson($ret);
        }
    }
    /***********************************提煤单接单页面1.0***************************/
    /**
     * 2017年7月18日15:48:29 zgw v2.0
     * 1、增加是否自备矿。
     * 2、单号改为伊泰的单号。
     * 2017年7月24日16:34:17 zgw v2.1
     * 不是伊泰的显示MWT的提煤单号
     */
    function doingBill(){
        //检测自身是否可以接单,不能接单就不给显示
        $driver=M('driver')->where(array('uid'=>session('user_id')))->find();
        //检测自己绑定的车辆是否有提煤单
        $bill=M('bill')->where(array('truck_id'=>$driver['truck_id']))->where(array('state'=>array('in','1,2,3,4,5')))->find();
        if(!$bill){
            $ret['code']=0;
            $ret['message']='没有处理的提煤单';
            backJson($ret);
        }
        //检测司机状态
        $bill1=M('bill')->where(array('truck_id'=>$driver['truck_id'],'driver_id'=>session('user_id')))->where(array('state'=>array('in','2,3,4,5')))->find();
        if(!$bill1 && !D('Driver',"Logic")->is_work($driver['uid'])){
            $ret['code']=0;
            $ret['message']='司机休息中';
            backJson($ret);
        }
        //检测提煤单是否已经被接受了
        if($bill['state']!=1 and $bill['driver_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='提煤单已经被领取';
            backJson($ret);
        }
        //提货地//送货地//煤种
        $bill_detail=D('Bill','Logic')->detail($bill['id']);
        //获取常规信息
        $truck=M('truck')->where(array('id'=>$driver['truck_id']))->find();
        $bill_detail['lic_number']=$truck['lic_number'];
        $bill_detail['state']=$bill['state'];
        $bill_detail['owner_order']=!$truck['owner_order']?'':$truck['owner_order'];
        //司机名字
        $truck_detail=D("Truck",'Logic')->getDetail($truck['id']);
        $bill_detail['driver']=M('users')->where(array('id'=>session('user_id')))->getField('real_name');
        $bill_detail['trucker']=$truck_detail['owner']['name'];
        $bill_detail['bill_id']=$bill['id'];
        //获取地理位置
        $sql="select ST_X(local_gps) as gps_lng,ST_Y(local_gps) as gps_lat from coal_users WHERE (id=".session('user_id').")";
        $gps=M()->query($sql);
        $user_gps=$gps[0];
        //提货点gps,如果没有则使用卖方GPS
        $sql="select ST_X(begin_gps) as gps_lng,ST_Y(begin_gps) as gps_lat from coal_orders WHERE (order_id='".$bill['order_id']."')";
        $gps=M()->query($sql);
        if($gps[0]['gps_lng']){
            $seller_gps=$gps[0];
        }else{
            $sql="select ST_X(add_gps) as gps_lng,ST_Y(add_gps) as gps_lat from coal_company WHERE (id='".$bill['seller']."')";
            $gps=M()->query($sql);
            $seller_gps=$gps[0];
        }
        //送货点GPS,如果没有则使用买方GPS
        $sql="select ST_X(end_gps) as gps_lng,ST_Y(end_gps) as gps_lat from coal_orders WHERE (order_id='".$bill['order_id']."')";
        $gps=M()->query($sql);
        if($gps[0]['gps_lng']){
            $buyer_gps=$gps[0];
        }else{
            $sql="select ST_X(add_gps) as gps_lng,ST_Y(add_gps) as gps_lat from coal_company WHERE (id='".$bill['buyer']."')";
            $gps=M()->query($sql);
            $buyer_gps=$gps[0];
        }
        $bill_detail['seller_distance']=!$seller_gps['gps_lat']?'未知':$seller_distance=getDistance($user_gps['gps_lat'],$user_gps['gps_lng'],$seller_gps['gps_lat'],$seller_gps['gps_lng'])/1000;
        $bill_detail['buyer_distance']=!$buyer_gps['gps_lat']?'未知':$buyer_distance=getDistance($user_gps['gps_lat'],$user_gps['gps_lng'],$buyer_gps['gps_lat'],$buyer_gps['gps_lng'])/1000;
        $bill_detail['seller_gps']=$seller_gps;
        $bill_detail['buyer_gps']=$buyer_gps;
        //是否已经退单过
        $bill_rebill=M('driver_rbill')->where(array('bill_id'=>$bill['id']))->getField('state');
        $bill_detail['bill_re']=$bill_rebill?$bill_rebill:0;
        //获取空车数量
        //获取重车数量
        $bill_detail['seller_trucks']=D('Company','Logic')->getTrucks($bill['seller']);
        $bill_detail['buyer_trucks']=D('Company','Logic')->getTrucks($bill['buyer']);
        //获取前面的车辆排队
        if($bill['state']==2 || $bill['state']==3){
            //车辆去煤矿拉货的时候
            $bill_detail['before_trucks']=M('bill')->where(array('seller'=>$bill['seller']))->where('(state=2 or state=3) and '."do_time <'".$bill['do_time']."'")->count();
        }else{
            //车辆去卸煤的时候
            $bill_detail['before_trucks']=M('bill')->where(array('buyer'=>$bill['buyer']))->where('(state=5 or state=4) and '."do_time <'".$bill['do_time']."'")->count();
        }

        $bill_detail['do_time']=$bill['do_time']?getday($bill['do_time']):'';
        // 2017年6月4日14:05:20 zgw add use_type和is_print
        $bill_detail['use_type'] = $bill['use_type'];
        $bill_detail['is_print'] = $bill['is_print'];
        // 2017年7月18日15:56:52 zgw add bill_number 和is_zibei
        $bill_number = $bill['order_id'];
        $is_zibei = -1;
        $yitai = M('link_yitai')->where(array('bill_id' => $bill['id']))->find();
        if ($yitai) {
            $bill_number = $yitai['bill_number'];
            $is_zibei = $yitai['is_zibei'];
        }
        $bill_detail['bill_number'] = $bill_number;
        $bill_detail['is_zibei'] = $is_zibei;
        $bill_detail['code']=1;
        $bill_detail['message']='获取成功';
        backJson($bill_detail);
    }
    /***********************************确认接单***************************/
    function acceptBill(){
        if(!I('bill_id')){
            $ret['code']=0;
            $ret['message']='传递参数不完整';
            backJson($ret);
        }
        D('Bill','Logic')->accept(I('bill_id'),session('user_id'));
    }
    /***********************************提煤单二维码***************************/
    function billEwm(){
        if(!I('bill_id')){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            die(json_encode($ret));
        }
        D('Bill',"Logic")->ewm(I('bill_id'));
    }
    /***********************************上传过磅单*****************************/
    function balanceBill(){
        //提煤单必须是当前用户领取的
        $bill=M('bill')->where(array('id'=>I('bill_id')))->find();
        if($bill['driver_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='提煤单状态异常';
            backJson($ret);
        }
        //查看卖家过磅单是否需要提交以及是否已经提交
        $bill=M('bill')->where(array('id'=>I('bill_id')))->find();
        if($bill['state']>2){
            $ret['seller_balance']['need']=0;
        }else{
            $ret['seller_balance']['need']=1;
        }
        $seller_balance=M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>1))->find();
        if($seller_balance){
            $ret['seller_balance']['already']=1;
            $ret['seller_balance']['img']=$seller_balance['img'];
            $ret['seller_balance']['true_img']=getTrueImgSrc($seller_balance['img']);
            $ret['seller_balance']['weight']=$seller_balance['weight'];
        }else{
            $ret['seller_balance']['already']=0;
        }
        //查看买家过磅单是否需要提交以及是否已经提交
        $bill=M('bill')->where(array('id'=>I('bill_id')))->find();
        if($bill['state']=4){
            $ret['buyer_balance']['need']=1;
        }else{
            $ret['buyer_balance']['need']=1;
        }
        $seller_balance=M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>2))->find();
        if($seller_balance){
            $ret['buyer_balance']['already']=1;
            $ret['buyer_balance']['img']=$seller_balance['img'];
            $ret['buyer_balance']['true_img']=getTrueImgSrc($seller_balance['img']);
            $ret['buyer_balance']['weight']=$seller_balance['weight'];
        }else{
            $ret['buyer_balance']['already']=0;
        }
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /***********************************上传过磅单type=>1上传卖方过磅单,type=>2上传买方过磅单*****************************/
    function doBlance(){
        if(!I('img')||!I('bill_id')||!I('type')||!I('weight')){
            $ret['code']=0;
            $ret['message']='参数传递有误';
            backJson($ret);
        }
        //提煤单必须是当前用户领取的
        $bill=M('bill')->where(array('id'=>I('bill_id')))->find();
        if($bill['driver_id']!=session('user_id')){
            $ret['code']=0;
            $ret['message']='提煤单状态异常';
            backJson($ret);
        }

        switch (I('type')){
            case 1:
                $data['img']=I('img');
                $data['add_time']=date('Y-m-d H:i:s');
                $data['type']=1;
                $data['bill_id']=I('bill_id');
                $data['weight']=I('weight');
                $seller_balance=M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>1))->find();
                if($seller_balance){
                    M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>1))->save($data);
                }else{
                    M('balance_bill')->add($data);
                }
                $ret['code']=1;
                $ret['message']='处理成功';
                $ret['img']=getTrueImgSrc(I('img'));
                backJson($ret);
                break;
            case 2:
                //如果是提交卖方过磅单查看卖方过磅单是否需要提交并且有没有提交
                $bill=M('bill')->where(array('id'=>I('bill_id')))->find();
                if($bill['state']==2){
                    $need=1;
                }else{
                    $need=0;
                }
                $seller_balance=M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>1))->find();
                if($seller_balance){
                    $already=1;
                }else{
                    $already=0;
                }
                if($need==1 and $already==0){
                    $ret['code']=0;
                    $ret['message']='您还没有提交卖方过磅单请先提交卖方过磅单';
                    backJson($ret);
                }
                //开始提交
                $data['img']=I('img');
                $data['add_time']=date('Y-m-d H:i:s');
                $data['type']=2;
                $data['bill_id']=I('bill_id');
                $data['weight']=I('weight');
                $buyer_balance=M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>2))->find();
                if($buyer_balance){
                    M('balance_bill')->where(array('bill_id'=>I('bill_id'),'state'=>1,'type'=>2))->save($data);
                }else{
                    M('balance_bill')->add($data);
                }
                $ret['code']=1;
                $ret['message']='处理成功';
                $ret['img']=getTrueImgSrc(I('img'));
                backJson($ret);
        }
    }
    /***********************************司机退单*****************************/
    function reBill(){
        //司机只能在没有拉货的情况下可以退单
        //并且该提煤单必须是派给了当前司机
        $bill=M('bill')->where(array('id'=>I('bill_id'),'driver_id'=>session('user_id')))->where('state=2')->find();
        if(!$bill){
            $ret['code']=0;
            $ret['message']='提煤单状态异常，不能退单';
            die(json_encode($ret));
        }
        $data['return_time']=date("Y-m-d H:i:s");
        $data['bill_id']=I('bill_id');
        $data['state']=1;
        $data['reason']=I('reason');
        //查看之前是否已经有过提交
        $resault=M('driver_rbill')->where(array('bill_id'=>I('bill_id')))->find();
        //如果存在进行更新
        if($resault){
            if($resault['state']==1){
                $res=M('driver_rbill')->where(array('bill_id'=>I('bill_id')))->save($data);
                if($res!==false){
                    $ret['code']=1;
                    $ret['message']='退单成功，等待公司反馈确认';
                    //推送公司管理人员退单
                    D('Push','Logic')->noticeCompanyRebill(session('user_id'),$bill['company']);
                    die(json_encode($ret));
                }else{
                    $ret['code']=0;
                    $ret['message']='操作失败';
                    die(json_encode($ret));
                }
            }else{
                $ret['code']=0;
                $ret['message']='提煤单状态异常，不能退单';
                die(json_encode($ret));
            }
        }else{
            $res=M('driver_rbill')->add($data);
            if($res){
                $ret['code']=1;
                $ret['message']='退单成功，等待公司反馈确认';
                //推送公司管理人员退单
                D('Push','Logic')->noticeCompanyRebill(session('user_id'),$bill['company']);
                die(json_encode($ret));
            }else{
                $ret['code']=0;
                $ret['message']='操作失败';
                die(json_encode($ret));
            }
        }
    }
    /******************************提煤单历史统计*************************/
    function billHistory(){
        //默认本月初到今天
        $begin_time=I('begin_time')?I('begin_time'):date('Y-m-01 00:00:00');
        $end_time=I('end_time')?I('end_time'):date('Y-m-d 23:59:59');
        $rows=D('Bill','Logic')->history(null,session('user_id'),$begin_time,$end_time,null,null,null,null,null,null,false);
        $ret['total_w']=0;
        foreach ($rows as $key=>$value){
            $ret['total_w']=$ret['total_w']+$value['end_w'];
            $rows[$key]['dis_time']=date('Y年m月d日',strtotime($value['end_second_time']));
            unset($rows[$key]['order_id']);
            unset($rows[$key]['end_second_time']);
        }
        $ret['rows']=$rows;
        $ret['begin_time']=date('Y年m月d日',strtotime($begin_time));
        $ret['end_time']=date('Y年m月d日',strtotime($end_time));
        $ret['total_times']=count($rows);
        $ret['code']=1;
        $ret['message']='获取成功';
        backJson($ret);
    }
    /******************************提煤单区分电子和纸质类型*************************/
    function changeUseType(){
        $bill_id = I('bill_id');
        $use_type = I('use_type');
        $ret['code']=1;
        $ret['message']='修改成功';
        backJson($ret);
        $bill = M('bill')->find($bill_id);
        if (!$bill) {
            $ret['code']=0;
            $ret['message']='提煤单不存在';
            backJson($ret);
        }
        if ($bill['state'] != 2) {
            $ret['code']=0;
            $ret['message']='提煤单状态不对';
            backJson($ret);
        }
        if ($bill['driver_id'] != session('user_id')) {
            $ret['code']=0;
            $ret['message']='不是自己的提煤单';
            backJson($ret);
        }
        //如果是卡片刷出的提煤单，接单时已经变成了已打印，这时选择类型没有用
        if($bill['is_print']==1 && $bill['use_type']==1){
            $ret['code']=1;
            $ret['message']='修改成功';
            backJson($ret);
        }
        $res = M('bill')->save(array('id' => $bill_id, 'use_type' => $use_type));
        if ($res !== false) {
            $ret['code']=1;
            $ret['message']='修改成功';
            backJson($ret);
        } else {
            $ret['code']=0;
            $ret['message']='修改失败';
            backJson($ret);
        }
    }
}